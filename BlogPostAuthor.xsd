<xsd:schema xmlns="uuid:aab953f0-9c2e-4bbf-9a1c-a0296b51af6a" xmlns:tcmi="http://www.tridion.com/ContentManager/5.0/Instance" xmlns:xsd="http://www.w3.org/2001/XMLSchema" elementFormDefault="qualified" targetNamespace="uuid:aab953f0-9c2e-4bbf-9a1c-a0296b51af6a">
	<xsd:import namespace="http://www.tridion.com/ContentManager/5.0/Instance"></xsd:import>
	<xsd:annotation>
		<xsd:appinfo>
			<tcm:Labels xmlns:tcm="http://www.tridion.com/ContentManager/5.0">
				<tcm:Label ElementName="author" Metadata="false">Blog Post Author</tcm:Label>
			</tcm:Labels>
		</xsd:appinfo>
	</xsd:annotation>
	<xsd:element name="BlogPostAuthor">
		<xsd:complexType>
			<xsd:sequence>
				<xsd:element name="author" minOccurs="1" maxOccurs="1" type="tcmi:XHTML">
					<xsd:annotation>
						<xsd:appinfo>
							<tcm:ExtensionXml xmlns:tcm="http://www.tridion.com/ContentManager/5.0"></tcm:ExtensionXml>
							<tcm:Size xmlns:tcm="http://www.tridion.com/ContentManager/5.0">10</tcm:Size>
							<tcm:FilterXSLT xmlns:tcm="http://www.tridion.com/ContentManager/5.0">
								<xsl:stylesheet xmlns:xsl="http://www.w3.org/1999/XSL/Transform" version="1.0">
									<xsl:output omit-xml-declaration="yes" method="xml" cdata-section-elements="script"></xsl:output>
									<xsl:template name="FormattingFeatures">
										<FormattingFeatures xmlns="http://www.tridion.com/ContentManager/5.2/FormatArea">
											<Doctype>Transitional</Doctype>
											<AccessibilityLevel>0</AccessibilityLevel>
											<DisallowedActions></DisallowedActions>
											<DisallowedStyles></DisallowedStyles>
										</FormattingFeatures>
									</xsl:template>
									<xsl:template match="/ | node() | @*">
										<xsl:copy>
											<xsl:apply-templates select="node() | @*"></xsl:apply-templates>
										</xsl:copy>
									</xsl:template>
									<xsl:template match="*[      (self::br or self::p or self::div)     and      normalize-space(translate(., &apos; &apos;, &apos;&apos;)) = &apos;&apos;     and      not(@*)     and      not(processing-instruction())     and      not(comment())     and      not(*[not(self::br) or @* or * or node()])     and      not(following::node()[not(         (self::text() or self::br or self::p or self::div)        and         normalize-space(translate(., &apos; &apos;, &apos;&apos;)) = &apos;&apos;        and         not(@*)        and         not(processing-instruction())        and         not(comment())        and         not(*[not(self::br) or @* or * or node()])       )])     ]">
										<!-- ignore all paragraphs and line-breaks at the end that have nothing but (non-breaking) spaces and line breaks -->
									</xsl:template>
									<xsl:template match="br[parent::div and not(preceding-sibling::node()) and not(following-sibling::node())]">
										<!-- Chrome generates <div><br/></div>. Renders differently in different browsers. Replace it with a non-breaking space -->
										<xsl:text> </xsl:text>
									</xsl:template>
								</xsl:stylesheet>
							</tcm:FilterXSLT>
						</xsd:appinfo>
					</xsd:annotation>
				</xsd:element>
			</xsd:sequence>
		</xsd:complexType>
	</xsd:element>
</xsd:schema>